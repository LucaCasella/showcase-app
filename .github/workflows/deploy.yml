
name: deploy

on:
  push:
    branches: [ "master" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: build

    strategy:
      matrix:
        node-version: [ 20.x ]
    #        node-version: [14.x, 16.x, 18.x]
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create .env file
        run: |
          echo APP_NAME=Fotografa >> .env
          echo APP_ENV=production >> .env
          echo APP_KEY=base64:mnCgLVk3fd20KHdbcBF55ODZ/GvyvMdI2dg6IsYfXAE= >> .env
          echo APP_DEBUG=false >> .env
          echo APP_URL=www.anastasiaKabakova.com >> .env
          echo DB_CONNECTION=mysql >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DB_DATABASE=${{ secrets.DB_NAME }} >> .env
          echo DB_USERNAME=${{ secrets.DB_USER }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASS }} >> .env
          echo MAIL_MAILER=smtp >> .env
          echo MAIL_HOST=smtps.aruba.it >> .env
          echo MAIL_PORT=465 >> .env
          echo MAIL_USERNAME=${{ secrets.MAIL_USERNAME }} >> .env
          echo MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }} >> .env
          echo MAIL_ENCRYPTION=ssl >> .env
          echo MAIL_FROM_ADDRESS=${{ secrets.MAIL_FROM_ADDRESS }} >> .env
          echo MAIL_FROM_NAME=Fotografa >> .env
          echo GOOGLE_RECAPTCHA_API_KEY=${{ secrets.GOOGLE_RECAPTCHA_API_KEY }} >> .env
          echo GOOGLE_RECAPTCHA_PROJECT_ID=${{ secrets.GOOGLE_RECAPTCHA_PROJECT_ID }} >> .env
          echo GOOGLE_RECAPTCHA_SITE_KEY=${{ secrets.GOOGLE_RECAPTCHA_SITE_KEY }} >> .env
          echo INSTAGRAM_ACCES_TOKEN=${{ secrets.INSTAGRAM_ACCES_TOKEN }} >> .env
          echo PLACE_API_KEY=${{ secrets.PLACE_API_KEY }} >> .env
      - name: Clear Cache and other Laravel commands
        run: |
              php artisan view:clear || true
              php artisan cache:clear || true
              php artisan config:clear || true
              php artisan route:clear || true
              php artisan storage:link || true
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies Public UI
        run: npm install
      - name: Build Public UI (Blade/Vite)
        run: npm run build
      - name: Upload to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASS }}
          local-dir: ./
          server-dir: /www.anastasiakabakova.com/
          exclude: |
            .git*

